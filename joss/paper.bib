@article{mda1,
abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, Amber, and NAMD and the Protein Data Bank format can be read and written. Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU General Public License from http://mdanalysis.googlecode.com.},
author = {Michaud-Agrawal, Naveen and Denning, Elizabeth J and Woolf, Thomas B and Beckstein, Oliver},
doi = {10.1002/jcc.21787},
issn = {1096-987X},
journal = {Journal of computational chemistry},
keywords = {Python programming language,Software - MDAnalysis,analysis,membrane systems,molecular dynamics simulations,object-oriented design,proteins,software},
mendeley-tags = {Software - MDAnalysis},
month = {jul},
number = {10},
pages = {2319--27},
pmid = {21500218},
title = {{MDAnalysis: a toolkit for the analysis of molecular dynamics simulations.}},
url = {https://onlinelibrary.wiley.com/doi/full/10.1002/jcc.21787},
volume = {32},
year = {2011}
}

@InProceedings{mda2,
  author    = { {R}ichard {J}. {G}owers and {M}ax {L}inke and {J}onathan {B}arnoud and {T}yler {J}. {E}. {R}eddy and {M}anuel {N}. {M}elo and {S}ean {L}. {S}eyler and {J}an {D}omański and {D}avid {L}. {D}otson and {S}ébastien {B}uchoux and {I}an {M}. {K}enney and {O}liver {B}eckstein },
  title     = { {M}{D}{A}nalysis: {A} {P}ython {P}ackage for the {R}apid {A}nalysis of {M}olecular {D}ynamics {S}imulations },
  booktitle = { {P}roceedings of the 15th {P}ython in {S}cience {C}onference },
  pages     = { 98 - 105 },
  year      = { 2016 },
  editor    = { {S}ebastian {B}enthall and {S}cott {R}ostrup },
  doi       = { 10.25080/Majora-629e541a-00e },
  url = {http://conference.scipy.org/proceedings/scipy2016/oliver_beckstein.html}
}

@article{mdt,
abstract = {As molecular dynamics (MD) simulations continue to evolve into powerful computational tools for studying complex biomolecular systems, the necessity of flexible and easy-to-use software tools for the analysis of these simulations is growing. We have developed MDTraj, a modern, lightweight, and fast software package for analyzing MD simulations. MDTraj reads and writes trajectory data in a wide variety of commonly used formats. It provides a large number of trajectory analysis capabilities including minimal root-mean-square-deviation calculations, secondary structure assignment, and the extraction of common order parameters. The package has a strong focus on interoperability with the wider scientific Python ecosystem, bridging the gap between MD data and the rapidly growing collection of industry-standard statistical analysis and visualization tools in Python. MDTraj is a powerful and user-friendly software package that simplifies the analysis of MD data and connects these datasets with the modern interactive data science software ecosystem in Python.},
author = {McGibbon, Robert T and Beauchamp, Kyle A and Harrigan, Matthew P and Klein, Christoph and Swails, Jason M and Hern{\'{a}}ndez, Carlos X and Schwantes, Christian R and Wang, Lee-Ping and Lane, Thomas J and Pande, Vijay S},
doi = {10.1016/j.bpj.2015.08.015},
issn = {1542-0086},
journal = {Biophysical journal},
keywords = {Software - MDTraj},
mendeley-tags = {Software - MDTraj},
month = {oct},
number = {8},
pages = {1528--32},
pmid = {26488642},
title = {{MDTraj: A Modern Open Library for the Analysis of Molecular Dynamics Trajectories.}},
url = {http://mdtraj.org/1.9.3/},
volume = {109},
year = {2015}
}

@article{pdbtools,
abstract = {The pdb-tools are a collection of Python scripts for working with molecular structure data in the Protein Data Bank (PDB) format. They allow users to edit, convert, and validate PDB files, from the command-line, in a simple but efficient manner. The pdb-tools are implemented in Python, without any external dependencies, and are freely available under the open-source Apache License at https://github.com/haddocking/pdb-tools/ and on PyPI.},
author = {Rodrigues, Jo{\~{a}}o P G L M and Teixeira, Jo{\~{a}}o M C and Trellet, Mika{\"{e}}l and Bonvin, Alexandre M J J},
doi = {10.12688/f1000research.17456.1},
issn = {2046-1402},
journal = {F1000Research},
keywords = {PDB,Python,bioinformatics,chemistry,macromolecules,protein structure,structural biology},
pages = {1961},
pmid = {30705752},
title = {pdb-tools: a swiss army knife for molecular structures.},
url = {https://f1000research.com/articles/7-1961/v1},
volume = {7},
year = {2018}
}

@article{OpenMM,
abstract = {OpenMM is a molecular dynamics simulation toolkit with a unique focus on extensibility. It allows users to easily add new features, including forces with novel functional forms, new integration algorithms, and new simulation protocols. Those features automatically work on all supported hardware types (including both CPUs and GPUs) and perform well on all of them. In many cases they require minimal coding, just a mathematical description of the desired function. They also require no modification to OpenMM itself and can be distributed independently of OpenMM. This makes it an ideal tool for researchers developing new simulation methods, and also allows those new methods to be immediately available to the larger community.},
author = {Eastman, Peter and Swails, Jason and Chodera, John D. and McGibbon, Robert T. and Zhao, Yutong and Beauchamp, Kyle A. and Wang, Lee Ping and Simmonett, Andrew C. and Harrigan, Matthew P. and Stern, Chaya D. and Wiewiora, Rafal P. and Brooks, Bernard R. and Pande, Vijay S.},
doi = {10.1371/journal.pcbi.1005659},
file = {:home/joao/Mendeley Desktop/2017/PLoS Computational Biology/Eastman et al. - 2017 - OpenMM 7 Rapid development of high performance algorithms for molecular dynamics.pdf:pdf},
isbn = {1111111111},
issn = {15537358},
journal = {PLoS Computational Biology},
keywords = {Software - Molecular Dynamics,Software - OpenMM},
mendeley-tags = {Software - Molecular Dynamics,Software - OpenMM},
number = {7},
pages = {1--17},
title = {{OpenMM 7: Rapid development of high performance algorithms for molecular dynamics}},
volume = {13},
year = {2017}
}

@Techreport{CS-R9526, title= {Python tutorial}, author = {G. van Rossum}, number={CS-R9526}, institution= {Centrum voor Wiskunde en Informatica (CWI)}, year= {1995}, address={Amsterdam}, month={May} }
